require 'csv'
$plotx=50
$ploty=100
kurikaesi=80
#pkousin=0.235
kousinsu=5.877
nensu=200
$seizon2=-1.0
$seizon7_9=0.65
$seizon=4.5
num=1
d3max=100
d5max=20

#kousinsu=($plotx*$ploty/125).to_f*pkousin
kousin_sei=kousinsu.to_i
kousin_shou=kousinsu - kousin_sei
str="../../../kamchatka/simu/test0128_"+nensu.to_s+"_"+$seizon.to_s+"_"+$seizon2.to_s+"_"+$seizon7_9.to_s+".csv"
class Tree
    attr_accessor:x,:y,
    :d2,
    :d7_9,
    :num,
    :age
    def initialize(x,y,num)
        @x=x
        @y=y
        @d2=0
        @d7_9=0
        @num=num
        @age=1
    end
end
def dist(x1,x2,y1,y2)
    b_x=(($plotx/2.0-x1)+x2) % $plotx
    b_y=(($ploty/2.0-x1)+x2) % $plotx
    return (($plotx/2.0-b_x)**2+($ploty/2.0-b_y)**2)**0.5
end
# def dist( tree_a, $plotx,$ploty )
#     x=@step*($plotx+0.5)
#     y=@step*($ploty+0.5)
#     b_x=((@x_max/2.0-x)+tree_a.x) % @x_max
#     b_y=((@y_max/2.0-y)+tree_a.y) % @y_max
#     return Math::sqrt((@x_max/2.0 - b_x)**2 + (@y_max/2.0 - b_y)**2)
# end

def forest_death(forest)
    sinu=Array.new
    forest.each do |tree|
        if death(tree) then
            sinu.push(tree)
        end
    end
    return sinu
end


def death(tree)
    sibou=Random.rand
    seizonritu=1.0/(1.0+Math::exp(-$seizon-tree.d2*$seizon2-tree.d7_9*$seizon7_9))
   # p seizonritu
    return sibou>seizonritu
end
csv=CSV.open(str, "wb") do |csv|
    csv<< ["x","y","age","num"]

for k in 1..kurikaesi do
    puts k
forest=Array.new
for j in 1..nensu do
    #puts j
    kousinsu =rand(0.0..1.0)>kousin_shou ? kousin_sei : kousin_sei+1
for i in 1..kousinsu do
    forest.push(
        Tree.new(
            Random.rand*$plotx,
            Random.rand*$ploty,
            num
        )
    )
    num+=1
end
forest.each do|target|
    target.d2=0
    target.d7_9=0
    forest.each do |object|
        if object.age>=30 then
            if target.num!=object.num then
                dis=dist(target.x, object.x, target.y, object.y)
                if dis<2.5 then
                    target.d2+=1
                elsif dis>4.5 && dis<9.0 then
                    target.d7_9+=1
                end
            end
        end    
    end
    target.d2=[target.d2,d3max].min
    target.d7_9=[target.d7_9,d5max].min
    target.age+=1
end
sinu=forest_death(forest)
forest=forest-sinu
end
p forest.length
forest.each do |tree|
    csv<<[tree.x, tree.y, tree.age, k]
end
end
end
